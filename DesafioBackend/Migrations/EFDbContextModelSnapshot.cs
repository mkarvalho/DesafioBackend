// <auto-generated />
using System;
using DesafioBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DesafioBackend.Migrations
{
    [DbContext(typeof(EFDbContext))]
    partial class EFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DesafioBackend.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("275203f2-c6f0-403c-89da-820d716dbe6c"),
                            Created = new DateTime(2022, 2, 9, 21, 16, 22, 235, DateTimeKind.Local).AddTicks(9727),
                            Modified = new DateTime(2022, 2, 9, 21, 16, 22, 237, DateTimeKind.Local).AddTicks(3601),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("1475659b-9ca7-4b35-923c-8de32248c961"),
                            Created = new DateTime(2022, 2, 9, 21, 16, 22, 237, DateTimeKind.Local).AddTicks(4743),
                            Modified = new DateTime(2022, 2, 9, 21, 16, 22, 237, DateTimeKind.Local).AddTicks(4748),
                            Name = "Caixa"
                        },
                        new
                        {
                            Id = new Guid("e5fc000a-c417-4fc8-8eb5-4dcee13ebe29"),
                            Created = new DateTime(2022, 2, 9, 21, 16, 22, 237, DateTimeKind.Local).AddTicks(4751),
                            Modified = new DateTime(2022, 2, 9, 21, 16, 22, 237, DateTimeKind.Local).AddTicks(4753),
                            Name = "Operador"
                        });
                });

            modelBuilder.Entity("DesafioBackend.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProfileUser", b =>
                {
                    b.Property<Guid>("ProfilesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("ProfilesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ProfileUser");
                });

            modelBuilder.Entity("ProfileUser", b =>
                {
                    b.HasOne("DesafioBackend.Entities.Profile", null)
                        .WithMany()
                        .HasForeignKey("ProfilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioBackend.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
